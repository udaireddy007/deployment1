resource "aws_sns_topic" "user_updates" {
  name = "user-updates-topic"
}


resource "aws_sns_topic" "autoscaling_events" {
  name = "autoscaling-events"
}
​
resource "aws_cloudwatch_event_rule" "cw_event_to_sns" {
  name          = "capture-autoscaling-events"
  description   = "Capture autoscaling evetns"
  event_pattern = "${file("files/cloudwatch-rule.json")}"
}
​
data "aws_caller_identity" "current" {}
​
data "aws_iam_policy_document" "sns-topic-policy" {
  policy_id = "__default_policy_ID"
​
  statement {
    sid    = "__default_statement_ID"
    effect = "Allow"
​
    actions = [
      "SNS:Subscribe",
      "SNS:SetTopicAttributes",
      "SNS:RemovePermission",
      "SNS:Receive",
      "SNS:Publish",
      "SNS:ListSubscriptionsByTopic",
      "SNS:GetTopicAttributes",
      "SNS:DeleteTopic",
      "SNS:AddPermission",
    ]
​
    condition {
      test     = "StringEquals"
      variable = "AWS:SourceOwner"
      values   = ["${data.aws_caller_identity.current.account_id}"]
    }
​
    principals {
      type        = "AWS"
      identifiers = ["*"]
    }
​
    resources = ["${aws_sns_topic.autoscaling_events.arn}"]
  }
​
  statement {
    sid     = "AWSEvents_capture-autoscaling-events_SendToSNS"
    effect  = "Allow"
    actions = ["SNS:Publish"]
​
    principals {
      type        = "Service"
      identifiers = ["events.amazonaws.com"]
    }
​
    resources = ["${aws_sns_topic.autoscaling_events.arn}"]
  }
}
​
resource "aws_sns_topic_policy" "cw_event_permissions" {
  arn = "${aws_sns_topic.autoscaling_events.arn}"
​
  policy = "${data.aws_iam_policy_document.sns-topic-policy.json}"
}
